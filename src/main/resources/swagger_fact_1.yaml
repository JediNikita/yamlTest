swagger: "2.0"
info:
  description: "This is a sample server FACT Rest Api Documentation"
  version: "1.0.0"
  title: "FACT Rest Api Specification"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "vishrut@yodaplus.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost"
basePath: "/v2"
tags:
- name: "company"
  description: "Companies in FACT"
- name: "facility"
  description: "FACT facility ratings"
- name: "financialStatement"
  description: "Financial Statement"
schemes:
- "https"
- "http"
paths:
  /facilities:
    get:
      tags:
      - "facility"
      summary: "Returns list of all facilties with ratings"
      description: "Returns a list of facilities with ratings"
      operationId: "getFacilityRatings"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
              type: "array"
              items:
                $ref: "#/definitions/Facility"
      security:
      - api_key: []
  /facilities/{facilityId}/findByPeriodo:
    get:
      tags:
      - "facility"
      summary: "Finds facility rating by rating period"
      description: "Provide rating period"
      operationId: "findFacilityRatingByIdAndPeriod"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "facilityId"
        in: "path"
        description: "FacilityId"
        required: true
        type: "string"
      - name: "periodo"
        in: "query"
        description: "Effective period in yyyymm format"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Facility"
        "400":
          description: "Invalid status value"
      security:
        - api_key: []
  /facilities/findByPeriodo:
    get:
      tags:
      - "facility"
      summary: "Finds facility ratings by rating period"
      description: "Provide rating period"
      operationId: "findFacilityRatingsByPeriod"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "periodo"
        in: "query"
        description: "Effective period in yyyymm format"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Facility"
        "400":
          description: "Invalid status value"
      security:
        - api_key: []
  /companies:
    get:
      tags:
      - "company"
      summary: "Returns list of all companies"
      description: "Returns a list of companies"
      operationId: "getCompanyList"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
              type: "array"
              items:
                $ref: "#/definitions/Company"
      security:
      - api_key: []
    post:
      tags:
      - "company"
      summary: "Add a new company to FACT system"
      description: ""
      operationId: "addCompany"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Company object that needs to be added to FACT"
        required: true
        schema:
          $ref: "#/definitions/Company"
      responses:
        "405":
          description: "Invalid input"
      security:
        - api_key: []
    put:
      tags:
      - "company"
      summary: "Update an existing company in FACT"
      description: ""
      operationId: "updateCompany"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Company object that needs to be updated in FACT"
        required: true
        schema:
          $ref: "#/definitions/Company"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Company not found"
        "405":
          description: "Validation exception"
      security:
        - api_key: []
  /companies/findByParams:
    get:
      tags:
      - "company"
      summary: "Finds companies by portfolio and PD expiry"
      description: "Combination of portfolio and PD expiry status can be provided"
      operationId: "findCompaniessByParams"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "portfolio"
        in: "query"
        description: "Active/Inactive Portfolio"
        required: true
        type: "string"
        enum:
        - "active"
        - "inactive"
        default: "active"
      - name: "isPDExpired"
        in: "query"
        description: "Is the PD for company expired?"
        required: true
        type: "boolean"
        default: true
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Company"
        "400":
          description: "Invalid status value"
      security:
        - api_key: []
  /companies/{companyId}:
    get:
      tags:
      - "company"
      summary: "Find company by ID"
      description: "Returns a single company"
      operationId: "getCompanyById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "companyId"
        in: "path"
        description: "ID of company to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Company"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Company not found"
      security:
      - api_key: []
    patch:
      tags:
      - "company"
      summary: "Partial update of a company"
      description: ""
      operationId: "partialUpdateCompany"
      consumes:
      - "application/json"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "companyId"
        in: "path"
        description: "Id of company that needs to be updated"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Company object that needs to be added to FACT"
        required: true
        schema:
          $ref: "#/definitions/Company"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Company not found"
        "405":
          description: "Validation exception"
      security:
      - api_key: []
    delete:
      tags:
      - "company"
      summary: "Deletes a company"
      description: ""
      operationId: "deleteCompany"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "companyId"
        in: "path"
        description: "Company id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Company not found"
      security:
      - api_key: []
  /companies/{companyId}/financial-statements/{year}:
    get:
      tags:
      - "financialStatement"
      summary: "Fetch Financial Statement by year for a company"
      description: "Returns Financial Statement by year for a company and period"
      operationId: "getFinancialStatementByYear"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "companyId"
        in: "path"
        description: "Id of company"
        required: true
        type: "integer"
        format: "int64"
      - name: "year"
        in: "path"
        description: "Year of financial statement"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/FinancialStatement"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Financial statement not found"
      security:
      - api_key: []
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  FinancialStatement:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      totalAssets:
        type: "number"
        default: 0.0
      netIncome:
        type: "number"
        default: 0.0
      totalEquity:
        type: "number"
        default: 0.0
      annualRevenue:
        type: "number"
        default: 0.0
      companyId:
        type: "integer"
        format: "int64"
      PD:
        type: "number"
      year:
        type: "string"
    xml:
      name: "FinancialStatement"
  Company:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      orgUniqueId:
        type: "integer"
        format: "int64"
      uniqueId:
        type: "integer"
        format: "int64"
      companyName:
        type: "string"
      domicileCountryISO:
        type: "string"
      companyType:
        type: "string"
      portfolio:
        type: "string"
        description: "Active/Inactive Portfolio"
        enum:
        - "active"
        - "inactive"
      expiredPD:
        type: "boolean"
        default: false
    xml:
      name: "Company"
  Facility:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      expectedLossDefault:
        type: "number"
        default: 0.0
      finalRating:
        type: "string"
        default: "A"
      expectedLossGrade:
        type: "number"
        default: 0.0
      ratingDate:
        type: "string"
        format: "date"
      yyyymm:
        type: "string"
    xml:
      name: "Facility"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"